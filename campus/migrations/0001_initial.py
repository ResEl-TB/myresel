# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-12-05 17:34
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('F', 'Foyer'), ('S', 'École')], help_text='emplacement de la salle', max_length=1)),
                ('name', models.CharField(help_text='nom de la salle', max_length=20)),
                ('mailing_list', models.EmailField(blank=True, help_text='mailing-list à contacter pour réserver cette salle', max_length=254)),
                ('private', models.BooleanField(default=False, help_text='indique si la salle est privée ou non')),
            ],
        ),
        migrations.CreateModel(
            name='RoomBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="nom de l'évènement", max_length=20)),
                ('description', models.TextField(help_text="description de l'évènement")),
                ('start_time', models.DateTimeField(help_text="début de l'évènement")),
                ('end_time', models.DateTimeField(help_text="fin de l'évènement")),
                ('user', models.CharField(help_text='utilisateur ayant fait la demande de réservation', max_length=50)),
                ('booking_type', models.CharField(choices=[('party', 'Soirée'), ('club', 'Activité de club'), ('meeting', 'Réunion'), ('training', 'Formation'), ('event', 'Évènement'), ('sport', 'Sport'), ('arts', 'Art et culture'), ('trip', 'Sortie'), ('other', 'Autre'), ('hidden', 'Ne pas afficher sur le calendrier')], help_text="type d'évènement", max_length=50)),
                ('displayable', models.BooleanField(default=True, help_text='affiche ou non cet évènement sur le calendrier')),
                ('moderated', models.BooleanField(default=False, editable=False, help_text="indique si l'évènement a été modéré")),
                ('moderated_by', models.CharField(default='pas encore modéré', editable=False, help_text="indique l'admin qui a modéré l'évènemnt", max_length=50)),
                ('room', models.ManyToManyField(help_text="indique dans quelle salle se déroule l'évènement", to='campus.Room')),
            ],
        ),
    ]
