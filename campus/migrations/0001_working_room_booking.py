# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-12-08 18:15
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('campus', '0001_initial'), ('campus', '0002_more_locations_for_rooms'), ('campus', '0003_override_default_permissions'), ('campus', '0004_auto_20161206_1521'), ('campus', '0005_auto_20161206_1526'), ('campus', '0006_room_allowed_members'), ('campus', '0007_auto_20161206_1537'), ('campus', '0008_auto_20161206_1545'), ('campus', '0009_auto_20161206_1548'), ('campus', '0010_auto_20161206_1614'), ('campus', '0011_auto_20161206_1736'), ('campus', '0012_auto_20161206_1745'), ('campus', '0013_remove_roombooking_name'), ('campus', '0014_mail_mailmoderator_roomadmin'), ('campus', '0015_auto_20161208_1514'), ('campus', '0016_auto_20161208_1517')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('F', 'Foyer'), ('S', 'École')], help_text='emplacement de la salle', max_length=1)),
                ('name', models.CharField(help_text='nom de la salle', max_length=20)),
                ('mailing_list', models.EmailField(blank=True, help_text='mailing-list à contacter pour réserver cette salle', max_length=254)),
                ('private', models.BooleanField(default=False, help_text='indique si la salle est privée ou non')),
            ],
        ),
        migrations.CreateModel(
            name='RoomBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="nom de l'évènement", max_length=20)),
                ('description', models.TextField(help_text="description de l'évènement")),
                ('start_time', models.DateTimeField(help_text="début de l'évènement")),
                ('end_time', models.DateTimeField(help_text="fin de l'évènement")),
                ('user', models.CharField(help_text='utilisateur ayant fait la demande de réservation', max_length=50)),
                ('booking_type', models.CharField(choices=[('party', 'Soirée'), ('club', 'Activité de club'), ('meeting', 'Réunion'), ('training', 'Formation'), ('event', 'Évènement'), ('sport', 'Sport'), ('arts', 'Art et culture'), ('trip', 'Sortie'), ('other', 'Autre'), ('hidden', 'Ne pas afficher sur le calendrier')], help_text="type d'évènement", max_length=50)),
                ('displayable', models.BooleanField(default=True, help_text='affiche ou non cet évènement sur le calendrier')),
                ('moderated', models.BooleanField(default=False, editable=False, help_text="indique si l'évènement a été modéré")),
                ('moderated_by', models.CharField(default='pas encore modéré', editable=False, help_text="indique l'admin qui a modéré l'évènemnt", max_length=50)),
                ('room', models.ManyToManyField(help_text="indique dans quelle salle se déroule l'évènement", to='campus.Room')),
            ],
            options={
                'permissions': (('can_moderate', "Indique si l'admin peut modérer ou non les réservations de salle"),),
            },
        ),
        migrations.AlterField(
            model_name='room',
            name='location',
            field=models.CharField(choices=[('F', 'Foyer'), ('S', 'École'), ('O', 'Extérieur'), ('C', 'Campus')], help_text='emplacement de la salle', max_length=1),
        ),
        migrations.AlterModelOptions(
            name='roombooking',
            options={'default_permissions': (('can_moderate', 'Can moderate room bookings'),)},
        ),
        migrations.AlterModelOptions(
            name='roombooking',
            options={'default_permissions': ()},
        ),
        migrations.AlterModelOptions(
            name='roombooking',
            options={'permissions': (('can_moderate', 'Can moderate room bookings'),)},
        ),
        migrations.AlterField(
            model_name='room',
            name='location',
            field=models.CharField(choices=[('F', 'Foyer'), ('S', 'École'), ('O', 'Extérieur'), ('C', 'Campus')], help_text='emplacement de la salle', max_length=1, verbose_name='Emplacement'),
        ),
        migrations.AlterField(
            model_name='room',
            name='name',
            field=models.CharField(help_text='nom de la salle', max_length=20, verbose_name='Nom de la salle'),
        ),
        migrations.AlterField(
            model_name='room',
            name='private',
            field=models.BooleanField(default=False, help_text='indique si la salle est privée ou non', verbose_name='Salle privée / club'),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='booking_type',
            field=models.CharField(choices=[('party', 'Soirée'), ('club', 'Activité de club'), ('meeting', 'Réunion'), ('training', 'Formation'), ('event', 'Évènement'), ('sport', 'Sport'), ('arts', 'Art et culture'), ('trip', 'Sortie'), ('other', 'Autre'), ('hidden', 'Ne pas afficher sur le calendrier')], help_text="type d'évènement", max_length=50, verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='displayable',
            field=models.BooleanField(default=True, help_text='affiche ou non cet évènement sur le calendrier', verbose_name='Affichable'),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='end_time',
            field=models.DateTimeField(help_text="fin de l'évènement", verbose_name="Fin de l'évènement"),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='moderated',
            field=models.BooleanField(default=False, editable=False, help_text="indique si l'évènement a été modéré", verbose_name='Modéré'),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='moderated_by',
            field=models.CharField(default='pas encore modéré', editable=False, help_text="indique l'admin qui a modéré l'évènemnt", max_length=50, verbose_name='Modéré par'),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='name',
            field=models.CharField(help_text="nom de l'évènement", max_length=20, verbose_name="Nom de l'évènement"),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='room',
            field=models.ManyToManyField(help_text="indique dans quelle salle se déroule l'évènement", to='campus.Room', verbose_name='Salle(s)'),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='start_time',
            field=models.DateTimeField(help_text="début de l'évènement", verbose_name="Début de l'evènement"),
        ),
        migrations.AlterField(
            model_name='roombooking',
            name='user',
            field=models.CharField(help_text='utilisateur ayant fait la demande de réservation', max_length=50, verbose_name='Utilisateur'),
        ),
        migrations.AddField(
            model_name='room',
            name='allowed_members',
            field=models.TextField(blank=True, help_text='indique les utilisateurs pouvant réserver la salle, un par ligne', verbose_name='Membres authorisés'),
        ),
        migrations.AlterModelOptions(
            name='roombooking',
            options={'permissions': (('moderate_roombooking', 'Can moderate room bookings'),)},
        ),
        migrations.AlterModelOptions(
            name='room',
            options={'verbose_name': 'salle'},
        ),
        migrations.AlterModelOptions(
            name='roombooking',
            options={'permissions': (('moderate_roombooking', 'Can moderate room bookings'),), 'verbose_name': 'réservation'},
        ),
        migrations.RemoveField(
            model_name='roombooking',
            name='moderated',
        ),
        migrations.RemoveField(
            model_name='roombooking',
            name='moderated_by',
        ),
        migrations.AlterModelOptions(
            name='roombooking',
            options={'verbose_name': 'réservation'},
        ),
        migrations.RemoveField(
            model_name='roombooking',
            name='name',
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(editable=False, max_length=15, verbose_name='Envoyeur')),
                ('subject', models.CharField(max_length=50, verbose_name='Sujet')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('moderated', models.BooleanField(default=False, verbose_name='Modéré')),
                ('moderated_by', models.CharField(editable=False, max_length=15, verbose_name='Modéré par')),
            ],
        ),
        migrations.CreateModel(
            name='MailModerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=15, verbose_name="nom d'utilisateur")),
            ],
            options={
                'verbose_name': 'modérateur de mails',
                'verbose_name_plural': 'modérateurs de mails',
            },
        ),
        migrations.CreateModel(
            name='RoomAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=15, verbose_name="nom d'utilisateur")),
            ],
            options={
                'verbose_name': 'administrateurs des salles',
            },
        ),
        migrations.AlterModelOptions(
            name='roomadmin',
            options={'verbose_name': 'administrateur des salles', 'verbose_name_plural': 'administrateurs des salles'},
        ),
        migrations.AlterModelOptions(
            name='mail',
            options={'permissions': (('can_moderate', 'Can moderate mail'),)},
        ),
        migrations.AlterField(
            model_name='mail',
            name='moderated',
            field=models.BooleanField(default=False, editable=False, verbose_name='Modéré'),
        ),
    ]
