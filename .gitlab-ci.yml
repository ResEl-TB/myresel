# TODO: refactor configuration (username, pass...)
# TODO: do not delete migrations

variables:
 IMAGE: $CI_REGISTRY_IMAGE
 DOCKER_DRIVER: overlay2
  
 MYSQL_HOST: mysql-mysql-server
 MYSQL_USER: resel
 MYSQL_PASSWORD: blah
 MYSQL_DATABASE: resel
 MYSQL_ROOT_PASSWORD: blah
 MYSQL_ROOT_HOST: '%'

 REDIS_HOST: redis

 MYSQL_QOS_DATABASE: qos
 MYSQL_QOS_HOST: mysql-mysql-server
 MYSQL_QOS_USER: root
 MYSQL_QOS_PASSWORD: blah

 ROOTDIR: ./
 CONFDIR: myresel/
 ETCDIR: .install/etc/
 LIBDIR: .install/lib/
 LDAP_PASSWORD: blah

 LAPUTEX_HOST: http:\/\/laputex\/
 #LAPUTEX_PWD in gitlab secrets

 DEBIAN_FRONTEND: noninteractive

image: $IMAGE:latest
services:
  - redis:stretch
  - mysql/mysql-server:5.7

stages:
  - docker_build
  - docker_push
  - configure
  - test
  - deploy

before_script:
#  - source .install/scripts/install_essentials.sh no-upgrade
  - source .install/scripts/install_essentials.sh
  - apt-get install -qq default-mysql-client
  - echo "CREATE DATABASE ${MYSQL_QOS_DATABASE}" | mysql -u${MYSQL_QOS_USER} -p${MYSQL_QOS_PASSWORD} -h ${MYSQL_QOS_HOST}
  - source .install/scripts/install_openldap.sh
#  - source .install/scripts/install_latex.sh
  - pip3 install --upgrade pip
  - pip3 install -qUr requirements.txt
  - rm -f -- ${ROOTDIR}myresel/settings_local.py
  - export MYSQL_USER=root
  - source .install/scripts/configure.sh
  - source .install/scripts/populate_db.sh
  - python3 manage.py populate_redis
  - python3 manage.py calculate_free_ip
  - python3 manage.py rqworker &
  - python3 manage.py rqscheduler &

Build docker image:
  stage: docker_build
  image: $DOCKER_IMAGE
  services:
      - name: $RUNNER_IMAGE
        alias: docker
  before_script: &before_script
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE:$CI_COMMIT_SHA --build-arg LDAPPASSWD=$LDAP_PASSWORD .
    - docker push $IMAGE:$CI_COMMIT_SHA
  only:
   changes:
     - Dockerfile
  tags:
    - admin


Push docker image:
  stage: docker_push
  image: $DOCKER_IMAGE
  services:
      - name: $RUNNER_IMAGE
        alias: docker
  before_script: *before_script
  script:
    - docker pull $IMAGE:$CI_COMMIT_SHA
    - docker tag $IMAGE:$CI_COMMIT_SHA $IMAGE:latest
    - docker push $IMAGE:latest
  only:
   changes:
     - Dockerfile
  tags:
    - admin

django test suite:
  stage: test
  artifacts:
    paths:
      - htmlcov/
      - myresel/settings_local.py
      - wiki/migrations/
      - tresorerie/migrations/
      - pages/migrations/
      - gestion_personnes/migrations/
      - devices/migrations/
  script:
    - coverage run --rcfile=.coveragerc manage.py test --noinput
    - coverage report
    - coverage html
    - grep pc_cov htmlcov/index.html | egrep -o "[0-9]+\%" | awk '{ print "covered " $1;}'
  tags:
    - admin

python linting:
  stage: test
  script:
    - pylint --rcfile=.pylintrc --django-settings-module=myresel.settings campus fonctions gestion_personnes ldapback maisel myresel pages tresorerie wiki || exit $((35 & $?))
  allow_failure: false
  tags:
    - admin

deploy to staging:
  services: []
  before_script:
    - apt-get install -qq openssh-client
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "${STAGING_DEPLOY_KEY}")'
  stage: deploy
  script:
    - ssh -o "StrictHostKeyChecking=no" -T deploy@flea
  only:
    - master
  environment:
    name: staging flea
    url: https://dev.resel.fr/
  tags:
    - admin

deploy to brest:
  stage: deploy
  services: []
  before_script:
    - apt-get install -qq openssh-client
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "${SKYNET_DEPLOY_KEY}")'
  script:
    - ssh -o "StrictHostKeyChecking=no" -T deploy@skynet
  only:
    - deploy
  environment:
    name: skynet
    url: https://resel.fr/
  tags:
    - admin

deploy to rennes:
  stage: deploy
  services: []
  allow_failure: true
  before_script:
    - apt-get install -qq openssh-client
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "${DOUBIDOU_DEPLOY_KEY}")'
  script:
    - ssh -o "StrictHostKeyChecking=no" -T deploy@doubidou
  only:
    - deploy
  environment:
    name: doubidou
    url: https://rennes.resel.fr/
  tags:
    - admin
